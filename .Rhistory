library(readxl)
PA_prisoners_in_custody <- read_excel("PA-prisoners-in-custody")
View(PA_prisoners_in_custody)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(knitr)
dat.crime <- read_delim("crime_simple.txt", delim = "\t")
summary(dat.crim)
summary(dat.crime)
summary(dat.crime)
names(dat.crime)
summary(dat.crime)
view(dat.crime)
summary(dat.crime)
View(dat.crime)
plot(dat.crime$R,dat.crime$Ed, main = "Relationship between reported crime rate and average education for 47 states", xlab = "Reported Crime rate (# of offenses reported to police per million population)", ylab = "Average education (mean number of years of schooling for persons of age 25 or older)")
reg.output.nc <- lm(formula = R ~ Ed, data = dat.crime)
plot(dat.crime$R,dat.crime$Ed, main = "Relationship between reported crime rate and average education for 47 states", xlab = "Reported Crime rate (# of offenses reported to police per million population)", ylab = "Average education (mean number of years of schooling for persons of age 25 or older)")
abline(reg.output.nc, col="skyblue")
cor(dat.crime$R, dat.crime$Ed)
crime.lm <-lm(formula=Ed~R, data = dat.crime)
kable(summary(crime.lm)$coef, digits = 2)
crime.lm <-lm(formula=Ed~R, data = dat.crime)
summary(crime.lm)
#linearity assumption
plot(dat.crime$Ed, crime.lm$residuals, ylim = c(-15,15), main = "Residuals vs. x", xlab = "x, average years of education", ylab="Residuals" )
abline(h=0, lty="dashed")
plot(crime.lm, which = 1)
plot(dat.crime, which=3)
plot(dat.crime, which=3)
plot(crime.lm, which=3)
plot(crime.lm, which = 5)
plot(crime.lm, which=2)
summary(crime.lm)
plot(crime.lm)
summary(crime.lm)
cor(dat.crime$Ed, dat.crime$R)
cor(dat.crime$R, dat.crime$Ed)
crime.lm <-lm(formula=R~Ed, data = dat.crime)
summary(crime.lm)
crime.lm <-lm(formula=R~Ed, data = dat.crime)
summary(crime.lm)
kable(summary(crime.lm)$coef, digits = 2)
plot(dat.crime$Ed, crime.lm$residuals, ylim = c(-15,15), main = "Residuals vs. x", xlab = "x, average years of education", ylab="Residuals" )
abline(h=0, lty="dashed")
plot(crime.lm, which = 1)
plot(crime.lm, which=3)
plot(crime.lm, which = 5)
plot(crime.lm, which=2)
summary(crime.lm)
qqplot(crime.lm)
plot(crime.lm, which=2)
plot(crime.lm, which = 5)
plot(crime.lm, which = 5)
plot(crime.lm, which=3)
plot(crime.lm, which = 1)
plot(crime.lm, which = 1)
plot(dat.crime$Ed, crime.lm$residuals, ylim = c(-25,25), main = "Residuals vs. x", xlab = "x, average years of education", ylab="Residuals" )
abline(h=0, lty="dashed")
plot(crime.lm, which = 1)
plot(dat.crime$Ed, crime.lm$residuals, ylim = c(-50,50), main = "Residuals vs. x", xlab = "x, average years of education", ylab="Residuals" )
abline(h=0, lty="dashed")
dat <- read.csv(file = 'sim.data.csv')
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency") )
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency")
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="blue", breaks=10)
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
dat <- read.csv(file = 'sim.data.csv')
names(dat)
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
dat <- read.csv(file = 'sim.data.csv')
names(dat)
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
dat <- read.csv(file = 'sim.data.csv')
names(dat)
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
table(dat$funds)
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
plot(factor(dat$funds), dat$po.brut, ylab="Incidents of Police Brutality", xlab="Funding", main="Relationship between Funding and Incidents of police Brutality", col="pink")
table(datexam$race)
tab.variable1variable2 <- table(dat$funds, dat$po.brut)
barplot(tab.variable1variable2,   main = "Relationship between Funding and Incidents of police Brutality", ylim=c(0,100),
xlab = "Funding", ylab = "Incidents of Police Brutality",
legend.text = rownames(tab.variable1variable2),
beside = FALSE) # Stacked bars (default)
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
tab.variable1variable2 <- table(dat$funds, dat$po.brut)
barplot(tab.variable1variable2,   main = "Relationship between Funding and Incidents of police Brutality", ylim=c(0,100), xlim=c(0,50),
xlab = "Funding", ylab = "Incidents of Police Brutality",
legend.text = rownames(tab.variable1variable2),
beside = FALSE) # Stacked bars (default)
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=10)
dat <- read.csv(file = 'sim.data.csv')
summary(dat)
hist(dat$funds, main="Histogram of Funding (millions of dollars)", xlab="Amount of funding received per year", ylab="Frequency", xlim=c(0,100), ylim=c(0,100),col="yellow")
hist(dat$po.brut, main="Incidents of police brutality", xlab="Number of Incidents", ylab="Frequency", xlim=c(0,50), ylim=c(0,100),col="red", breaks=12)
reg.output <- lm(formula = po.brut~funds, data = dat)
reg.output <- lm(formula = po.brut~funds, data = dat)
summary(reg.output)
# Remember to remove eval=FALSE!!
plot(dat$funds,dat$po.brut, main = "Relationship between Funding and Police Brutality Incidents", xlab = "Funding (in millions of dollars)", ylab="Incidents of Police Brutality" )
abline(reg.output, col = "red", lwd=2)
# Remember to remove eval=FALSE!!
plot(dat$funds,dat$po.brut, main = "Relationship between Funding and Police Brutality Incidents", xlab = "Funding (in millions of dollars)", ylab="Incidents of Police Brutality" )
abline(reg.output, col = "red", lwd=2)
cor(dat$funds, dat$po.brut)
#Linearity Assumption
plot(dat$funds, reg.output$residuals, ylim=c(-15,15), main="Residuals vs. x", xlab="x, funding in millions of dollars", ylab="Residuals")
abline(h = 0, lty="dashed")
#Linearity Assumption
plot(dat$funds, reg.output$residuals, ylim=c(-5,5), main="Residuals vs. x", xlab="x, funding in millions of dollars", ylab="Residuals")
abline(h = 0, lty="dashed")
#Linearity Assumption
plot(reg.output, which=1)
#Equal Variance Assumption
plot(reg.output, which=3)
#Normal Population Assumption
plot(reg.output, which=2)
#Independence Assumption
plot(dat$funds, reg.output$residuals, ylim=c(-15,15), main="Residuals vs. x", xlab="x, Funding in million of dollars", ylab="Residuals")
abline(h = 0, lty="dashed")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
mpg
mpg
ggplot2::mpg
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
devtools::install_github("tidyverse/tidyverse")
devtools::install_github("tidyverse/tidyverse")
devtools::install_github("tidyverse/tidyverse")
install.packages("tidyverse")
library(tidyverse)
ggplot2::mpg
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot (data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot2 (data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
library(ggplot2)
ggplot2 (data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
ggplot2(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = <DATA>) +
ggplot(data = <DATA>) +
ggplot(data = mpg)
ggplot(data = mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg)
+ geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
+ geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
# left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
# right
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
demo <- diamonds(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = stat(prop), group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
nz <- map_data("nz")
ggplot(nz, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
ggplot(nz, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(title = "Fuel efficiency generally decreases with engine size")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_smooth(se = FALSE) +
labs(
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
colour = "Car type"
)
df <- tibble(
x = runif(10),
y = runif(10)
)
df <- tibble(
x = runif(10),
y = runif(10)
)
df <- tribble(
x = runif(10),
y = runif(10)
)
library(tidyverse)
library(tidyverse)
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_label(aes(label = model), data = best_in_class, nudge_y = 2, alpha = 0.5)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_label(aes(label = model), data = mpg, nudge_y = 2, alpha = 0.5)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_label(aes(label = model), data = best_in_class, nudge_y = 2, alpha = 0.5)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_text(aes(label = model), data = best_in_class)
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
?%>%
? %>%
%>%
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
install.packages('dplyr')
library('dplyr')
install.packages("dplyr")
install.packages('dplyr')
library('dplyr')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
